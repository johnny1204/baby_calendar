name: test

on:
  push:
    branches:
      - 'feature/reviewdog_larastan'
      - master
    paths:
      - '**.php'

jobs:
  test:
    # https://docs.github.com/ja/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MYSQL_USER: db_user
          MYSQL_PASSWORD: db_password
          MYSQL_DATABASE: test_db
          MYSQL_ROOT_PASSWORD: root
          DB_PORT: 3306
          DB_HOST: db
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - uses: actions/checkout@v2
      - name: cache composer
        id: vendor-cache
        uses: actions/cache@v1
        with:
          path: ./vendor
          key: ${{ runner.os }}--composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: set up php7.4
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
      - name: Verify MariaDB connection
        env:
          PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          while ! mysqladmin ping -h "127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done
      # デバッグ用
      - name: debug
        run: php -i
      - name: compose install
        run: |
          php -d memory_limit=-1 /usr/bin/composer install -n --prefer-dist
      - name: set application
        run: |
          cp .env.example .env
          cp .env.ci.example .env.testing
          php artisan key:generate --env=testing
      - name: db migrate
        run: php artisan migrate --env=testing
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            php:
              - '**.yml'
      - run: |
          run_phpunit=`${{github.event_name}} == 'push' && ((${{github.ref}} == 'refs/heads/master' || ${{github.ref}} == 'refs/heads/develop') || ${{steps.changes.outputs.php}} == 'true')`
          echo "::set-output name=RUN_PHPUNIT::$run_phpunit"
      # PHPUnit
      - name: Run PHPUnit
        if: ${{RUN_PHPUNIT}}
        working-directory: ./server
        run: ./vendor/bin/phpunit --log-junit reports/results.xml --configuration ./phpunit.xml -d memory_limit=-1
      # - name: npm
      #   run: npm install
      # - name: run test
      #   run: |
      #     ./vendor/bin/phpstan analyse --memory-limit=-1
      #     ./vendor/bin/phpunit --configuration phpunit.xml -d memory_limit=1
      #     npm run lint
      # - name: run test
      #   run: |
      #     ./vendor/bin/phpunit --configuration phpunit.xml -d memory_limit=1 --coverage-html coverage
